/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_3dGlo"]("main",{

/***/ "./src/modules/connect.js":
/*!********************************!*\
  !*** ./src/modules/connect.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar connect = function connect() {\n  var formInput = document.querySelectorAll(\"form\"),\n      nameInput = document.querySelectorAll(\"input[name='user_name']\"),\n      messageInput = document.querySelectorAll(\"input[name='user_message']\"),\n      emailInput = document.querySelectorAll(\"input[name='user_email']\"),\n      phoneInput = document.querySelectorAll(\"input[name='user_phone']\"); //console.log(\"formInput: \", formInput);\n\n  var readInputName = function readInputName(event) {\n    //console.log(\"nameInput: \", event);\n    event.target.value = event.target.value.replace(/[^А-Яа-яЁё\\s]+$/, \"\");\n  };\n\n  var readInputMessage = function readInputMessage(event) {\n    //console.log(\"nameInput: \", event);\n    event.target.value = event.target.value.replace(/[^?!,.а-яА-ЯёЁ0-9]+$/, \"\");\n  };\n\n  var readInputPhone = function readInputPhone(event) {\n    //console.log(\"nameInput: \", event);\n    event.target.value = event.target.value.replace(/[^\\d\\+]/, \"\");\n  };\n\n  var readInputEmail = function readInputEmail(event) {\n    //console.log(\"nameInput: \", event);\n    event.target.value = event.target.value.replace(/[^A-Za-z\\.\\@\\-\\!\\*\\'\\~]/, \"\");\n  };\n\n  var fixedName = function fixedName() {\n    var val = event.target.value.replace(/\\-{2,}/g, \"-\");\n\n    if (val.length < 2 || val.length > 30) {\n      alert(\"Имя должно содержать от 2 до 30 символов\"); //return;\n    }\n\n    val = val.split(/\\s+/);\n    event.target.value = val.map(function (w) {\n      return w.charAt(0).toUpperCase() + w.slice(1);\n    }).join(\" \"); // console.log(\n    //   \"value: \",\n    //   val.map((w) => w.charAt(0).toUpperCase() + w.slice(1)).join(\" \")\n    // );\n  };\n\n  var fixedText = function fixedText() {\n    var val = event.target.value.replace(/\\-{2,}/g, \"-\");\n    val = val.split(/\\s+/);\n    val[0] = val[0].charAt(0).toUpperCase() + val[0].slice(1); //val.map((w) => w.charAt(0).toUpperCase() + w.slice(1)).join(\" \");\n\n    event.target.value = val.map(function (w) {\n      return w;\n    }).join(\" \");\n  };\n\n  var fixedPhone = function fixedPhone() {\n    var val = event.target.value.replace(/[^\\d\\+]/, \"\");\n\n    if (val.length < 7 || val.length > 12) {\n      alert(\"Номер телефона должен содержать от 7 до 12 символов с учетом плюса!\");\n    } //console.log(\"val: \", val.length);\n    //console.log(\"val: \", val);\n\n\n    val = val.replace(/\\-{2,}/g, \"-\"); //console.log(\"val: \", val);\n\n    event.target.value = val; //console.log(\"event: \", event.target.value);\n  };\n\n  var fixedEmail = function fixedEmail() {\n    var val = event.target.value.replace(/[^A-Za-z\\.\\@\\-\\!\\*\\'\\~]/g, \"\");\n    val = val.replace(/\\-{2,}/g, \"-\");\n    val = val.replace(/\\-/, \"\");\n    val = val.replace(/\\-$/, \"\");\n    event.target.value = val; //console.log(\"event: \", val);\n  };\n\n  formInput.forEach(function (item) {\n    item.addEventListener(\"keyup\", function (event) {\n      if (event.target.matches(\"input[name='user_name']\")) {\n        console.log(\"event.target: \", event.target);\n        readInputName(event); //event.target.addEventListener(\"blur\", correct);\n      } else if (event.target.matches(\"input[name='user_message']\")) {\n        readInputMessage(event);\n      } else if (event.target.matches(\"input[name='user_email']\")) {\n        readInputEmail(event);\n      } else if (event.target.matches(\"input[name='user_phone']\")) {\n        readInputPhone(event);\n      }\n    }); // item.addEventListener(\"blur\", (event) => {\n    //   console.log(\"event.target: \", event.target);\n    // });\n  });\n  nameInput.forEach(function (item) {\n    //item.addEventListener(\"keyup\", readInputName);\n    item.addEventListener(\"blur\", function (event) {\n      //console.log(\"event.target blur: \", event.target);\n      fixedName();\n    });\n  });\n  messageInput.forEach(function (item) {\n    //item.addEventListener(\"keyup\", readInputName);\n    item.addEventListener(\"blur\", function (event) {\n      //console.log(\"event.target: \", event.target);\n      fixedText();\n    });\n  });\n  phoneInput.forEach(function (item) {\n    //item.addEventListener(\"keyup\", readInputPhone);\n    item.addEventListener(\"blur\", function (event) {\n      var val = event.target.value; //\n      //   readInputPhone(event);\n      // } //console.log(\"event.target: \", event.target);\n\n      fixedPhone();\n    });\n  });\n  emailInput.forEach(function (item) {\n    //item.addEventListener(\"keyup\", readInputEmail);\n    item.addEventListener(\"blur\", function (event) {\n      //console.log(\"event.target: \", event.target);\n      fixedEmail();\n    });\n  });\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (connect);\n\n//# sourceURL=webpack://3dGlo/./src/modules/connect.js?");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ "use strict";
/******/ 
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("f1911a6af570b9f3b7bb")
/******/ })();
/******/ 
/******/ }
);